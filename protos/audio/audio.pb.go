// Code generated by protoc-gen-go.
// source: protos/audio/audio.proto
// DO NOT EDIT!

/*
Package audio is a generated protocol buffer package.

It is generated from these files:
	protos/audio/audio.proto

It has these top-level messages:
	RequestModifyList
	RequestGetList
	ResponseGetList
	RequestModifyDetail
	ResponseGeneral
	RequestGetDetail
	ResponseGetDetail
*/
package audio

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AudioKind int32

const (
	AudioKind_audio    AudioKind = 0
	AudioKind_topic    AudioKind = 1
	AudioKind_category AudioKind = 2
	AudioKind_event    AudioKind = 3
)

var AudioKind_name = map[int32]string{
	0: "audio",
	1: "topic",
	2: "category",
	3: "event",
}
var AudioKind_value = map[string]int32{
	"audio":    0,
	"topic":    1,
	"category": 2,
	"event":    3,
}

func (x AudioKind) String() string {
	return proto.EnumName(AudioKind_name, int32(x))
}
func (AudioKind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AudioListType int32

const (
	AudioListType_listCategories        AudioListType = 0
	AudioListType_listTopic             AudioListType = 1
	AudioListType_listAudioRegular      AudioListType = 2
	AudioListType_listAudioSuggestion   AudioListType = 3
	AudioListType_listAudioEditorChoice AudioListType = 4
	AudioListType_listAudioByHashTag    AudioListType = 5
)

var AudioListType_name = map[int32]string{
	0: "listCategories",
	1: "listTopic",
	2: "listAudioRegular",
	3: "listAudioSuggestion",
	4: "listAudioEditorChoice",
	5: "listAudioByHashTag",
}
var AudioListType_value = map[string]int32{
	"listCategories":        0,
	"listTopic":             1,
	"listAudioRegular":      2,
	"listAudioSuggestion":   3,
	"listAudioEditorChoice": 4,
	"listAudioByHashTag":    5,
}

func (x AudioListType) String() string {
	return proto.EnumName(AudioListType_name, int32(x))
}
func (AudioListType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ErrorCode int32

const (
	ErrorCode_NOT_OK ErrorCode = 0
	ErrorCode_OK     ErrorCode = 200
	// client
	ErrorCode_REQUEST_INVALID ErrorCode = 1000
	// server response
	ErrorCode_VIDEOID_WRONG   ErrorCode = 1100
	ErrorCode_VIDEO_NOT_EXIST ErrorCode = 1101
	// server - Generic error for client
	ErrorCode_DB_ERROR     ErrorCode = 2000
	ErrorCode_DATA_ERROR   ErrorCode = 2001
	ErrorCode_SERVER_ERROR ErrorCode = 2002
	// general - unknown
	ErrorCode_UNKNOWN       ErrorCode = 3000
	ErrorCode_NETWORK_ERROR ErrorCode = 3001
	ErrorCode_SYSTEM_ERROR  ErrorCode = 3002
)

var ErrorCode_name = map[int32]string{
	0:    "NOT_OK",
	200:  "OK",
	1000: "REQUEST_INVALID",
	1100: "VIDEOID_WRONG",
	1101: "VIDEO_NOT_EXIST",
	2000: "DB_ERROR",
	2001: "DATA_ERROR",
	2002: "SERVER_ERROR",
	3000: "UNKNOWN",
	3001: "NETWORK_ERROR",
	3002: "SYSTEM_ERROR",
}
var ErrorCode_value = map[string]int32{
	"NOT_OK":          0,
	"OK":              200,
	"REQUEST_INVALID": 1000,
	"VIDEOID_WRONG":   1100,
	"VIDEO_NOT_EXIST": 1101,
	"DB_ERROR":        2000,
	"DATA_ERROR":      2001,
	"SERVER_ERROR":    2002,
	"UNKNOWN":         3000,
	"NETWORK_ERROR":   3001,
	"SYSTEM_ERROR":    3002,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type RequestModifyList struct {
	RequestID   string            `protobuf:"bytes,1,opt,name=requestID" json:"requestID,omitempty"`
	Listtype    int32             `protobuf:"varint,2,opt,name=listtype" json:"listtype,omitempty"`
	MemberScore map[string]string `protobuf:"bytes,3,rep,name=member_score" json:"member_score,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RequestModifyList) Reset()                    { *m = RequestModifyList{} }
func (m *RequestModifyList) String() string            { return proto.CompactTextString(m) }
func (*RequestModifyList) ProtoMessage()               {}
func (*RequestModifyList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RequestModifyList) GetMemberScore() map[string]string {
	if m != nil {
		return m.MemberScore
	}
	return nil
}

type RequestGetList struct {
	RequestID string `protobuf:"bytes,1,opt,name=requestID" json:"requestID,omitempty"`
	Listtype  int32  `protobuf:"varint,2,opt,name=listtype" json:"listtype,omitempty"`
}

func (m *RequestGetList) Reset()                    { *m = RequestGetList{} }
func (m *RequestGetList) String() string            { return proto.CompactTextString(m) }
func (*RequestGetList) ProtoMessage()               {}
func (*RequestGetList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ResponseGetList struct {
	Error       ErrorCode         `protobuf:"varint,1,opt,name=error,enum=audio.ErrorCode" json:"error,omitempty"`
	Description string            `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	List        map[string]string `protobuf:"bytes,3,rep,name=list" json:"list,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ResponseGetList) Reset()                    { *m = ResponseGetList{} }
func (m *ResponseGetList) String() string            { return proto.CompactTextString(m) }
func (*ResponseGetList) ProtoMessage()               {}
func (*ResponseGetList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ResponseGetList) GetList() map[string]string {
	if m != nil {
		return m.List
	}
	return nil
}

type RequestModifyDetail struct {
	RequestID string            `protobuf:"bytes,1,opt,name=requestID" json:"requestID,omitempty"`
	Kind      int32             `protobuf:"varint,2,opt,name=kind" json:"kind,omitempty"`
	Field     map[string]string `protobuf:"bytes,3,rep,name=field" json:"field,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RequestModifyDetail) Reset()                    { *m = RequestModifyDetail{} }
func (m *RequestModifyDetail) String() string            { return proto.CompactTextString(m) }
func (*RequestModifyDetail) ProtoMessage()               {}
func (*RequestModifyDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RequestModifyDetail) GetField() map[string]string {
	if m != nil {
		return m.Field
	}
	return nil
}

type ResponseGeneral struct {
	Error       ErrorCode `protobuf:"varint,1,opt,name=error,enum=audio.ErrorCode" json:"error,omitempty"`
	Description string    `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *ResponseGeneral) Reset()                    { *m = ResponseGeneral{} }
func (m *ResponseGeneral) String() string            { return proto.CompactTextString(m) }
func (*ResponseGeneral) ProtoMessage()               {}
func (*ResponseGeneral) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type RequestGetDetail struct {
	RequestID string `protobuf:"bytes,1,opt,name=requestID" json:"requestID,omitempty"`
	Kind      int32  `protobuf:"varint,2,opt,name=kind" json:"kind,omitempty"`
}

func (m *RequestGetDetail) Reset()                    { *m = RequestGetDetail{} }
func (m *RequestGetDetail) String() string            { return proto.CompactTextString(m) }
func (*RequestGetDetail) ProtoMessage()               {}
func (*RequestGetDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ResponseGetDetail struct {
	Error       ErrorCode         `protobuf:"varint,1,opt,name=error,enum=audio.ErrorCode" json:"error,omitempty"`
	Description string            `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Detail      map[string]string `protobuf:"bytes,3,rep,name=detail" json:"detail,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ResponseGetDetail) Reset()                    { *m = ResponseGetDetail{} }
func (m *ResponseGetDetail) String() string            { return proto.CompactTextString(m) }
func (*ResponseGetDetail) ProtoMessage()               {}
func (*ResponseGetDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ResponseGetDetail) GetDetail() map[string]string {
	if m != nil {
		return m.Detail
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestModifyList)(nil), "audio.RequestModifyList")
	proto.RegisterType((*RequestGetList)(nil), "audio.RequestGetList")
	proto.RegisterType((*ResponseGetList)(nil), "audio.ResponseGetList")
	proto.RegisterType((*RequestModifyDetail)(nil), "audio.RequestModifyDetail")
	proto.RegisterType((*ResponseGeneral)(nil), "audio.ResponseGeneral")
	proto.RegisterType((*RequestGetDetail)(nil), "audio.RequestGetDetail")
	proto.RegisterType((*ResponseGetDetail)(nil), "audio.ResponseGetDetail")
	proto.RegisterEnum("audio.AudioKind", AudioKind_name, AudioKind_value)
	proto.RegisterEnum("audio.AudioListType", AudioListType_name, AudioListType_value)
	proto.RegisterEnum("audio.ErrorCode", ErrorCode_name, ErrorCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for AudioService service

type AudioServiceClient interface {
	// Audio, Topic, Categories, Event Detail
	GetDetail(ctx context.Context, in *RequestGetDetail, opts ...grpc.CallOption) (*ResponseGetDetail, error)
	SetDetail(ctx context.Context, in *RequestModifyDetail, opts ...grpc.CallOption) (*ResponseGeneral, error)
	DeleteDetail(ctx context.Context, in *RequestModifyDetail, opts ...grpc.CallOption) (*ResponseGeneral, error)
	GetList(ctx context.Context, in *RequestGetList, opts ...grpc.CallOption) (*ResponseGetList, error)
	AddToList(ctx context.Context, in *RequestModifyList, opts ...grpc.CallOption) (*ResponseGeneral, error)
	RemoveToList(ctx context.Context, in *RequestModifyList, opts ...grpc.CallOption) (*ResponseGeneral, error)
}

type audioServiceClient struct {
	cc *grpc.ClientConn
}

func NewAudioServiceClient(cc *grpc.ClientConn) AudioServiceClient {
	return &audioServiceClient{cc}
}

func (c *audioServiceClient) GetDetail(ctx context.Context, in *RequestGetDetail, opts ...grpc.CallOption) (*ResponseGetDetail, error) {
	out := new(ResponseGetDetail)
	err := grpc.Invoke(ctx, "/audio.AudioService/GetDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audioServiceClient) SetDetail(ctx context.Context, in *RequestModifyDetail, opts ...grpc.CallOption) (*ResponseGeneral, error) {
	out := new(ResponseGeneral)
	err := grpc.Invoke(ctx, "/audio.AudioService/SetDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audioServiceClient) DeleteDetail(ctx context.Context, in *RequestModifyDetail, opts ...grpc.CallOption) (*ResponseGeneral, error) {
	out := new(ResponseGeneral)
	err := grpc.Invoke(ctx, "/audio.AudioService/DeleteDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audioServiceClient) GetList(ctx context.Context, in *RequestGetList, opts ...grpc.CallOption) (*ResponseGetList, error) {
	out := new(ResponseGetList)
	err := grpc.Invoke(ctx, "/audio.AudioService/GetList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audioServiceClient) AddToList(ctx context.Context, in *RequestModifyList, opts ...grpc.CallOption) (*ResponseGeneral, error) {
	out := new(ResponseGeneral)
	err := grpc.Invoke(ctx, "/audio.AudioService/AddToList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *audioServiceClient) RemoveToList(ctx context.Context, in *RequestModifyList, opts ...grpc.CallOption) (*ResponseGeneral, error) {
	out := new(ResponseGeneral)
	err := grpc.Invoke(ctx, "/audio.AudioService/RemoveToList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AudioService service

type AudioServiceServer interface {
	// Audio, Topic, Categories, Event Detail
	GetDetail(context.Context, *RequestGetDetail) (*ResponseGetDetail, error)
	SetDetail(context.Context, *RequestModifyDetail) (*ResponseGeneral, error)
	DeleteDetail(context.Context, *RequestModifyDetail) (*ResponseGeneral, error)
	GetList(context.Context, *RequestGetList) (*ResponseGetList, error)
	AddToList(context.Context, *RequestModifyList) (*ResponseGeneral, error)
	RemoveToList(context.Context, *RequestModifyList) (*ResponseGeneral, error)
}

func RegisterAudioServiceServer(s *grpc.Server, srv AudioServiceServer) {
	s.RegisterService(&_AudioService_serviceDesc, srv)
}

func _AudioService_GetDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudioServiceServer).GetDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/audio.AudioService/GetDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudioServiceServer).GetDetail(ctx, req.(*RequestGetDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _AudioService_SetDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModifyDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudioServiceServer).SetDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/audio.AudioService/SetDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudioServiceServer).SetDetail(ctx, req.(*RequestModifyDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _AudioService_DeleteDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModifyDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudioServiceServer).DeleteDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/audio.AudioService/DeleteDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudioServiceServer).DeleteDetail(ctx, req.(*RequestModifyDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _AudioService_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudioServiceServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/audio.AudioService/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudioServiceServer).GetList(ctx, req.(*RequestGetList))
	}
	return interceptor(ctx, in, info, handler)
}

func _AudioService_AddToList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModifyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudioServiceServer).AddToList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/audio.AudioService/AddToList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudioServiceServer).AddToList(ctx, req.(*RequestModifyList))
	}
	return interceptor(ctx, in, info, handler)
}

func _AudioService_RemoveToList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModifyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AudioServiceServer).RemoveToList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/audio.AudioService/RemoveToList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AudioServiceServer).RemoveToList(ctx, req.(*RequestModifyList))
	}
	return interceptor(ctx, in, info, handler)
}

var _AudioService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "audio.AudioService",
	HandlerType: (*AudioServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDetail",
			Handler:    _AudioService_GetDetail_Handler,
		},
		{
			MethodName: "SetDetail",
			Handler:    _AudioService_SetDetail_Handler,
		},
		{
			MethodName: "DeleteDetail",
			Handler:    _AudioService_DeleteDetail_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _AudioService_GetList_Handler,
		},
		{
			MethodName: "AddToList",
			Handler:    _AudioService_AddToList_Handler,
		},
		{
			MethodName: "RemoveToList",
			Handler:    _AudioService_RemoveToList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("protos/audio/audio.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 880 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x36, 0x25, 0xcb, 0x16, 0xc7, 0x92, 0xb5, 0x5e, 0xc7, 0x91, 0x22, 0xa4, 0x88, 0x40, 0xb4,
	0x80, 0xa3, 0x34, 0x12, 0xe2, 0x24, 0x40, 0xe1, 0x4b, 0xa1, 0x58, 0xac, 0x2b, 0x28, 0x96, 0x50,
	0x8a, 0xb1, 0x5b, 0xa0, 0x80, 0x4a, 0x8b, 0x63, 0x85, 0x30, 0xcd, 0x55, 0xc9, 0x95, 0x00, 0xc1,
	0xc8, 0xa5, 0xaf, 0xd0, 0x9e, 0x7a, 0xee, 0xb5, 0x3d, 0xb7, 0x7d, 0x82, 0x1c, 0x5a, 0xa0, 0x3f,
	0xaf, 0xd0, 0x43, 0x9f, 0xa2, 0x28, 0x76, 0xb9, 0xa6, 0x62, 0xcb, 0x86, 0x03, 0xe7, 0x22, 0x71,
	0xbf, 0x9d, 0xf9, 0xbe, 0x99, 0x6f, 0x67, 0x49, 0x28, 0x8d, 0x42, 0xc6, 0x59, 0x54, 0x77, 0xc6,
	0xae, 0xc7, 0xe2, 0xdf, 0x9a, 0x84, 0x68, 0x46, 0x2e, 0xca, 0x77, 0x87, 0x8c, 0x0d, 0x7d, 0xac,
	0x3b, 0x23, 0xaf, 0xee, 0x04, 0x01, 0xe3, 0x0e, 0xf7, 0x58, 0x10, 0xc5, 0x41, 0xc6, 0x8f, 0x1a,
	0xac, 0x59, 0xf8, 0xf5, 0x18, 0x23, 0xbe, 0xc7, 0x5c, 0xef, 0x68, 0xfa, 0xdc, 0x8b, 0x38, 0x5d,
	0x03, 0x3d, 0x8c, 0xc1, 0x56, 0xb3, 0xa4, 0x55, 0xb4, 0x4d, 0x9d, 0x12, 0xc8, 0xfa, 0x5e, 0xc4,
	0xf9, 0x74, 0x84, 0xa5, 0x54, 0x45, 0xdb, 0xcc, 0xd0, 0x8f, 0x21, 0x77, 0x82, 0x27, 0x87, 0x18,
	0xf6, 0xa3, 0x01, 0x0b, 0xb1, 0x94, 0xae, 0xa4, 0x37, 0x57, 0xb6, 0xee, 0xd7, 0xe2, 0x1a, 0xe6,
	0x48, 0x6b, 0x7b, 0x32, 0xb8, 0x27, 0x62, 0xcd, 0x80, 0x87, 0xd3, 0xf2, 0x16, 0x90, 0x8b, 0x18,
	0x5d, 0x81, 0xf4, 0x31, 0x4e, 0x95, 0x66, 0x1e, 0x32, 0x13, 0xc7, 0x1f, 0xc7, 0x82, 0xfa, 0x76,
	0xea, 0x23, 0xcd, 0x78, 0x0a, 0xab, 0x8a, 0x79, 0x17, 0xf9, 0x5b, 0xd7, 0x6a, 0xfc, 0xa0, 0x41,
	0xc1, 0xc2, 0x68, 0xc4, 0x82, 0x08, 0xcf, 0x12, 0xef, 0x41, 0x06, 0xc3, 0x90, 0x85, 0x32, 0x69,
	0x75, 0x8b, 0xa8, 0xc2, 0x4d, 0x81, 0xed, 0x30, 0x17, 0xe9, 0x3a, 0xac, 0xb8, 0x18, 0x0d, 0x42,
	0x6f, 0x24, 0x1c, 0x8b, 0x8b, 0xa0, 0x35, 0x58, 0x14, 0xdc, 0xaa, 0xdb, 0x4a, 0xd2, 0xed, 0x39,
	0xee, 0x9a, 0xf8, 0x89, 0x9b, 0x7c, 0x00, 0x7a, 0xb2, 0xb8, 0xb6, 0xbb, 0xef, 0x35, 0x58, 0x3f,
	0x67, 0x5c, 0x13, 0xb9, 0xe3, 0xf9, 0x97, 0xf5, 0x98, 0x83, 0xc5, 0x63, 0x2f, 0x70, 0xd5, 0x59,
	0x3c, 0x81, 0xcc, 0x91, 0x87, 0xbe, 0xab, 0xca, 0xfa, 0xe0, 0xb2, 0x43, 0x88, 0xb9, 0x6a, 0x9f,
	0x88, 0xb8, 0xb8, 0xb6, 0x0f, 0x01, 0x66, 0xab, 0x6b, 0x8b, 0xdb, 0x7d, 0xd3, 0xc2, 0x00, 0x43,
	0xc7, 0xbf, 0x99, 0x85, 0xc6, 0x63, 0x20, 0xb3, 0x33, 0x7c, 0xcb, 0x0e, 0x8d, 0x9f, 0xe4, 0xa0,
	0x26, 0x2e, 0xab, 0xb4, 0x9b, 0x9d, 0xe1, 0x13, 0x58, 0x72, 0x65, 0xbe, 0xb2, 0xeb, 0xfd, 0xf9,
	0x53, 0x54, 0x66, 0xc5, 0x7f, 0xb1, 0x5b, 0x0f, 0x61, 0xe5, 0x8d, 0xe5, 0x75, 0x76, 0x55, 0xb7,
	0x41, 0x6f, 0x08, 0xd6, 0xb6, 0x17, 0xb8, 0x54, 0x87, 0xf8, 0x36, 0x92, 0x05, 0xf1, 0xc8, 0xd9,
	0xc8, 0x1b, 0x10, 0x8d, 0xe6, 0x20, 0x3b, 0x70, 0x38, 0x0e, 0x59, 0x38, 0x25, 0x29, 0xb1, 0x81,
	0x13, 0x0c, 0x38, 0x49, 0x57, 0xbf, 0xd3, 0x20, 0x2f, 0x93, 0xc5, 0xe8, 0xd8, 0xd3, 0x11, 0x52,
	0x0a, 0xab, 0x62, 0xec, 0x76, 0xe2, 0x70, 0x0f, 0x23, 0xb2, 0x40, 0xf3, 0xa0, 0x0b, 0xcc, 0x56,
	0x6c, 0xb7, 0x80, 0x88, 0xa5, 0xcc, 0xb3, 0x70, 0x38, 0xf6, 0x9d, 0x90, 0xa4, 0x68, 0x11, 0xd6,
	0x13, 0xb4, 0x37, 0x1e, 0x0e, 0x31, 0x12, 0x46, 0x90, 0x34, 0xbd, 0x03, 0x1b, 0xc9, 0x86, 0xe9,
	0x7a, 0x9c, 0x85, 0x3b, 0x2f, 0x99, 0x37, 0x40, 0xb2, 0x48, 0x6f, 0x03, 0x4d, 0xb6, 0x9e, 0x4d,
	0x3f, 0x75, 0xa2, 0x97, 0xb6, 0x33, 0x24, 0x99, 0xea, 0x6b, 0x0d, 0xf4, 0x99, 0xb5, 0x00, 0x4b,
	0x9d, 0xae, 0xdd, 0xef, 0xb6, 0xc9, 0x02, 0x5d, 0x86, 0x54, 0xb7, 0x4d, 0x5e, 0x8b, 0x22, 0x0a,
	0x96, 0xf9, 0xd9, 0x0b, 0xb3, 0x67, 0xf7, 0x5b, 0x9d, 0xfd, 0xc6, 0xf3, 0x56, 0x93, 0xfc, 0xbb,
	0x4c, 0x29, 0xe4, 0xf7, 0x5b, 0x4d, 0xb3, 0xdb, 0x6a, 0xf6, 0x0f, 0xac, 0x6e, 0x67, 0x97, 0xfc,
	0x96, 0x15, 0x91, 0x12, 0xeb, 0x0b, 0x12, 0xf3, 0xf3, 0x56, 0xcf, 0x26, 0xbf, 0x67, 0x69, 0x1e,
	0xb2, 0xcd, 0x67, 0x7d, 0xd3, 0xb2, 0xba, 0x16, 0xf9, 0xa3, 0x40, 0x0b, 0x00, 0xcd, 0x86, 0xdd,
	0x50, 0xc0, 0x9f, 0x05, 0xba, 0x06, 0xb9, 0x9e, 0x69, 0xed, 0x9b, 0x96, 0x82, 0xfe, 0x2a, 0xd0,
	0x1c, 0x2c, 0xbf, 0xe8, 0xb4, 0x3b, 0xdd, 0x83, 0x0e, 0xf9, 0xb9, 0x28, 0xa4, 0x3a, 0xa6, 0x7d,
	0xd0, 0xb5, 0xda, 0x2a, 0xe2, 0x97, 0xa2, 0x4c, 0xfa, 0xa2, 0x67, 0x9b, 0x7b, 0x0a, 0xfa, 0xb5,
	0xb8, 0xf5, 0xdf, 0x22, 0xe4, 0x62, 0x4f, 0x30, 0x9c, 0x78, 0x03, 0xa4, 0x63, 0xd0, 0x67, 0x63,
	0x55, 0x3c, 0x7f, 0x7f, 0x92, 0x8d, 0x72, 0xe9, 0xaa, 0x49, 0x31, 0x9e, 0x7e, 0xf3, 0xf7, 0x3f,
	0xdf, 0xa6, 0xea, 0xf4, 0x61, 0x7d, 0xf2, 0x48, 0xbd, 0x8c, 0xe3, 0x19, 0xab, 0x0f, 0x91, 0xab,
	0xa7, 0x53, 0x31, 0xcf, 0xaf, 0xea, 0xa7, 0xc9, 0xa4, 0xbf, 0xa2, 0x5f, 0x81, 0xde, 0x4b, 0x64,
	0xcb, 0x57, 0x5f, 0xdb, 0xf2, 0xed, 0x39, 0x65, 0x79, 0x05, 0x8d, 0x7b, 0x52, 0xf7, 0x8e, 0x71,
	0x6b, 0x4e, 0x37, 0x42, 0xbe, 0xad, 0x55, 0xe9, 0x11, 0xe4, 0x9a, 0xe8, 0x23, 0xc7, 0x77, 0x10,
	0x31, 0xa4, 0xc8, 0x5d, 0xa3, 0x38, 0x27, 0xe2, 0x4a, 0x6a, 0xa1, 0x73, 0x0c, 0xcb, 0x67, 0x6f,
	0xd6, 0x8d, 0x39, 0xfb, 0x04, 0x7c, 0x09, 0xbb, 0xc4, 0x8d, 0x47, 0x92, 0xfd, 0x01, 0xbd, 0x3f,
	0x63, 0x17, 0xe3, 0x27, 0x8c, 0xab, 0x9f, 0x9e, 0xbd, 0xc8, 0xcf, 0xdb, 0xf6, 0x25, 0xe8, 0x0d,
	0xd7, 0xb5, 0xe5, 0xfd, 0xa0, 0xa5, 0xab, 0x3e, 0x39, 0x57, 0xf6, 0xf3, 0x9e, 0x54, 0x2c, 0x1a,
	0xf4, 0x82, 0xa2, 0xe3, 0xba, 0xa2, 0x95, 0x43, 0xc8, 0x59, 0x78, 0xc2, 0x26, 0x78, 0x63, 0x81,
	0x8a, 0x14, 0x28, 0x1b, 0x1b, 0x17, 0x04, 0x42, 0x49, 0xbb, 0xad, 0x55, 0x0f, 0x97, 0xe4, 0xf7,
	0xf7, 0xf1, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xc9, 0x60, 0x3e, 0xc0, 0x07, 0x00, 0x00,
}
