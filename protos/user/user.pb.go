// Code generated by protoc-gen-go.
// source: protos/user/user.proto
// DO NOT EDIT!

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	protos/user/user.proto

It has these top-level messages:
	RequestGetListOne
	ResponseGetListOne
	RequestModifyList
	RequestGetList
	ResponseGetList
	RequestModifyDetail
	ResponseGeneral
	RequestGetDetail
	RequestGetOne
	ResponseGetOne
	ResponseGetDetail
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserKind int32

const (
	UserKind_detail      UserKind = 0
	UserKind_fbid_userid UserKind = 1
	UserKind_fb_friend   UserKind = 2
	UserKind_fb_userid   UserKind = 3
)

var UserKind_name = map[int32]string{
	0: "detail",
	1: "fbid_userid",
	2: "fb_friend",
	3: "fb_userid",
}
var UserKind_value = map[string]int32{
	"detail":      0,
	"fbid_userid": 1,
	"fb_friend":   2,
	"fb_userid":   3,
}

func (x UserKind) String() string {
	return proto.EnumName(UserKind_name, int32(x))
}
func (UserKind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UserListType int32

const (
	UserListType_listVideoOfUser         UserListType = 0
	UserListType_listVideoSharedOfUser   UserListType = 1
	UserListType_listAudioInterestOfUser UserListType = 2
	UserListType_listFBFriendOfUser      UserListType = 3
	UserListType_listFansOfUser          UserListType = 4
	UserListType_listIdolOfUser          UserListType = 5
)

var UserListType_name = map[int32]string{
	0: "listVideoOfUser",
	1: "listVideoSharedOfUser",
	2: "listAudioInterestOfUser",
	3: "listFBFriendOfUser",
	4: "listFansOfUser",
	5: "listIdolOfUser",
}
var UserListType_value = map[string]int32{
	"listVideoOfUser":         0,
	"listVideoSharedOfUser":   1,
	"listAudioInterestOfUser": 2,
	"listFBFriendOfUser":      3,
	"listFansOfUser":          4,
	"listIdolOfUser":          5,
}

func (x UserListType) String() string {
	return proto.EnumName(UserListType_name, int32(x))
}
func (UserListType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ErrorCode int32

const (
	ErrorCode_NOT_OK ErrorCode = 0
	ErrorCode_OK     ErrorCode = 200
	// client
	ErrorCode_REQUEST_INVALID ErrorCode = 1000
	// server response
	ErrorCode_VIDEOID_WRONG   ErrorCode = 1100
	ErrorCode_VIDEO_NOT_EXIST ErrorCode = 1101
	// server - Generic error for client
	ErrorCode_DB_ERROR     ErrorCode = 2000
	ErrorCode_DATA_ERROR   ErrorCode = 2001
	ErrorCode_SERVER_ERROR ErrorCode = 2002
	// general - unknown
	ErrorCode_UNKNOWN       ErrorCode = 3000
	ErrorCode_NETWORK_ERROR ErrorCode = 3001
	ErrorCode_SYSTEM_ERROR  ErrorCode = 3002
)

var ErrorCode_name = map[int32]string{
	0:    "NOT_OK",
	200:  "OK",
	1000: "REQUEST_INVALID",
	1100: "VIDEOID_WRONG",
	1101: "VIDEO_NOT_EXIST",
	2000: "DB_ERROR",
	2001: "DATA_ERROR",
	2002: "SERVER_ERROR",
	3000: "UNKNOWN",
	3001: "NETWORK_ERROR",
	3002: "SYSTEM_ERROR",
}
var ErrorCode_value = map[string]int32{
	"NOT_OK":          0,
	"OK":              200,
	"REQUEST_INVALID": 1000,
	"VIDEOID_WRONG":   1100,
	"VIDEO_NOT_EXIST": 1101,
	"DB_ERROR":        2000,
	"DATA_ERROR":      2001,
	"SERVER_ERROR":    2002,
	"UNKNOWN":         3000,
	"NETWORK_ERROR":   3001,
	"SYSTEM_ERROR":    3002,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type RequestGetListOne struct {
	RequestID string       `protobuf:"bytes,1,opt,name=requestID" json:"requestID,omitempty"`
	Listtype  UserListType `protobuf:"varint,2,opt,name=listtype,enum=user.UserListType" json:"listtype,omitempty"`
	Member    string       `protobuf:"bytes,3,opt,name=member" json:"member,omitempty"`
}

func (m *RequestGetListOne) Reset()                    { *m = RequestGetListOne{} }
func (m *RequestGetListOne) String() string            { return proto.CompactTextString(m) }
func (*RequestGetListOne) ProtoMessage()               {}
func (*RequestGetListOne) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ResponseGetListOne struct {
	Error       ErrorCode `protobuf:"varint,1,opt,name=error,enum=user.ErrorCode" json:"error,omitempty"`
	Description string    `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Result      string    `protobuf:"bytes,3,opt,name=result" json:"result,omitempty"`
}

func (m *ResponseGetListOne) Reset()                    { *m = ResponseGetListOne{} }
func (m *ResponseGetListOne) String() string            { return proto.CompactTextString(m) }
func (*ResponseGetListOne) ProtoMessage()               {}
func (*ResponseGetListOne) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type RequestModifyList struct {
	RequestID   string            `protobuf:"bytes,1,opt,name=requestID" json:"requestID,omitempty"`
	Listtype    UserListType      `protobuf:"varint,2,opt,name=listtype,enum=user.UserListType" json:"listtype,omitempty"`
	MemberScore map[string]string `protobuf:"bytes,3,rep,name=member_score" json:"member_score,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RequestModifyList) Reset()                    { *m = RequestModifyList{} }
func (m *RequestModifyList) String() string            { return proto.CompactTextString(m) }
func (*RequestModifyList) ProtoMessage()               {}
func (*RequestModifyList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RequestModifyList) GetMemberScore() map[string]string {
	if m != nil {
		return m.MemberScore
	}
	return nil
}

type RequestGetList struct {
	RequestID string       `protobuf:"bytes,1,opt,name=requestID" json:"requestID,omitempty"`
	Listtype  UserListType `protobuf:"varint,2,opt,name=listtype,enum=user.UserListType" json:"listtype,omitempty"`
}

func (m *RequestGetList) Reset()                    { *m = RequestGetList{} }
func (m *RequestGetList) String() string            { return proto.CompactTextString(m) }
func (*RequestGetList) ProtoMessage()               {}
func (*RequestGetList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ResponseGetList struct {
	Error       ErrorCode         `protobuf:"varint,1,opt,name=error,enum=user.ErrorCode" json:"error,omitempty"`
	Description string            `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	List        map[string]string `protobuf:"bytes,3,rep,name=list" json:"list,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ResponseGetList) Reset()                    { *m = ResponseGetList{} }
func (m *ResponseGetList) String() string            { return proto.CompactTextString(m) }
func (*ResponseGetList) ProtoMessage()               {}
func (*ResponseGetList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ResponseGetList) GetList() map[string]string {
	if m != nil {
		return m.List
	}
	return nil
}

type RequestModifyDetail struct {
	RequestID string            `protobuf:"bytes,1,opt,name=requestID" json:"requestID,omitempty"`
	Kind      UserKind          `protobuf:"varint,2,opt,name=kind,enum=user.UserKind" json:"kind,omitempty"`
	Field     map[string]string `protobuf:"bytes,3,rep,name=field" json:"field,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RequestModifyDetail) Reset()                    { *m = RequestModifyDetail{} }
func (m *RequestModifyDetail) String() string            { return proto.CompactTextString(m) }
func (*RequestModifyDetail) ProtoMessage()               {}
func (*RequestModifyDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RequestModifyDetail) GetField() map[string]string {
	if m != nil {
		return m.Field
	}
	return nil
}

type ResponseGeneral struct {
	Error       ErrorCode `protobuf:"varint,1,opt,name=error,enum=user.ErrorCode" json:"error,omitempty"`
	Description string    `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *ResponseGeneral) Reset()                    { *m = ResponseGeneral{} }
func (m *ResponseGeneral) String() string            { return proto.CompactTextString(m) }
func (*ResponseGeneral) ProtoMessage()               {}
func (*ResponseGeneral) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type RequestGetDetail struct {
	RequestID string   `protobuf:"bytes,1,opt,name=requestID" json:"requestID,omitempty"`
	Kind      UserKind `protobuf:"varint,2,opt,name=kind,enum=user.UserKind" json:"kind,omitempty"`
}

func (m *RequestGetDetail) Reset()                    { *m = RequestGetDetail{} }
func (m *RequestGetDetail) String() string            { return proto.CompactTextString(m) }
func (*RequestGetDetail) ProtoMessage()               {}
func (*RequestGetDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type RequestGetOne struct {
	RequestID string   `protobuf:"bytes,1,opt,name=requestID" json:"requestID,omitempty"`
	Kind      UserKind `protobuf:"varint,2,opt,name=kind,enum=user.UserKind" json:"kind,omitempty"`
	Field     string   `protobuf:"bytes,3,opt,name=field" json:"field,omitempty"`
}

func (m *RequestGetOne) Reset()                    { *m = RequestGetOne{} }
func (m *RequestGetOne) String() string            { return proto.CompactTextString(m) }
func (*RequestGetOne) ProtoMessage()               {}
func (*RequestGetOne) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type ResponseGetOne struct {
	Error       ErrorCode `protobuf:"varint,1,opt,name=error,enum=user.ErrorCode" json:"error,omitempty"`
	Description string    `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Result      string    `protobuf:"bytes,3,opt,name=result" json:"result,omitempty"`
}

func (m *ResponseGetOne) Reset()                    { *m = ResponseGetOne{} }
func (m *ResponseGetOne) String() string            { return proto.CompactTextString(m) }
func (*ResponseGetOne) ProtoMessage()               {}
func (*ResponseGetOne) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type ResponseGetDetail struct {
	Error       ErrorCode         `protobuf:"varint,1,opt,name=error,enum=user.ErrorCode" json:"error,omitempty"`
	Description string            `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Detail      map[string]string `protobuf:"bytes,3,rep,name=detail" json:"detail,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ResponseGetDetail) Reset()                    { *m = ResponseGetDetail{} }
func (m *ResponseGetDetail) String() string            { return proto.CompactTextString(m) }
func (*ResponseGetDetail) ProtoMessage()               {}
func (*ResponseGetDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ResponseGetDetail) GetDetail() map[string]string {
	if m != nil {
		return m.Detail
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestGetListOne)(nil), "user.RequestGetListOne")
	proto.RegisterType((*ResponseGetListOne)(nil), "user.ResponseGetListOne")
	proto.RegisterType((*RequestModifyList)(nil), "user.RequestModifyList")
	proto.RegisterType((*RequestGetList)(nil), "user.RequestGetList")
	proto.RegisterType((*ResponseGetList)(nil), "user.ResponseGetList")
	proto.RegisterType((*RequestModifyDetail)(nil), "user.RequestModifyDetail")
	proto.RegisterType((*ResponseGeneral)(nil), "user.ResponseGeneral")
	proto.RegisterType((*RequestGetDetail)(nil), "user.RequestGetDetail")
	proto.RegisterType((*RequestGetOne)(nil), "user.RequestGetOne")
	proto.RegisterType((*ResponseGetOne)(nil), "user.ResponseGetOne")
	proto.RegisterType((*ResponseGetDetail)(nil), "user.ResponseGetDetail")
	proto.RegisterEnum("user.UserKind", UserKind_name, UserKind_value)
	proto.RegisterEnum("user.UserListType", UserListType_name, UserListType_value)
	proto.RegisterEnum("user.ErrorCode", ErrorCode_name, ErrorCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for UserService service

type UserServiceClient interface {
	GetOne(ctx context.Context, in *RequestGetOne, opts ...grpc.CallOption) (*ResponseGetOne, error)
	GetDetail(ctx context.Context, in *RequestGetDetail, opts ...grpc.CallOption) (*ResponseGetDetail, error)
	SetDetail(ctx context.Context, in *RequestModifyDetail, opts ...grpc.CallOption) (*ResponseGeneral, error)
	DeleteDetail(ctx context.Context, in *RequestModifyDetail, opts ...grpc.CallOption) (*ResponseGeneral, error)
	GetListOne(ctx context.Context, in *RequestGetListOne, opts ...grpc.CallOption) (*ResponseGetListOne, error)
	GetList(ctx context.Context, in *RequestGetList, opts ...grpc.CallOption) (*ResponseGetList, error)
	AddToList(ctx context.Context, in *RequestModifyList, opts ...grpc.CallOption) (*ResponseGeneral, error)
	RemoveToList(ctx context.Context, in *RequestModifyList, opts ...grpc.CallOption) (*ResponseGeneral, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetOne(ctx context.Context, in *RequestGetOne, opts ...grpc.CallOption) (*ResponseGetOne, error) {
	out := new(ResponseGetOne)
	err := grpc.Invoke(ctx, "/user.UserService/GetOne", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetDetail(ctx context.Context, in *RequestGetDetail, opts ...grpc.CallOption) (*ResponseGetDetail, error) {
	out := new(ResponseGetDetail)
	err := grpc.Invoke(ctx, "/user.UserService/GetDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SetDetail(ctx context.Context, in *RequestModifyDetail, opts ...grpc.CallOption) (*ResponseGeneral, error) {
	out := new(ResponseGeneral)
	err := grpc.Invoke(ctx, "/user.UserService/SetDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteDetail(ctx context.Context, in *RequestModifyDetail, opts ...grpc.CallOption) (*ResponseGeneral, error) {
	out := new(ResponseGeneral)
	err := grpc.Invoke(ctx, "/user.UserService/DeleteDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetListOne(ctx context.Context, in *RequestGetListOne, opts ...grpc.CallOption) (*ResponseGetListOne, error) {
	out := new(ResponseGetListOne)
	err := grpc.Invoke(ctx, "/user.UserService/GetListOne", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetList(ctx context.Context, in *RequestGetList, opts ...grpc.CallOption) (*ResponseGetList, error) {
	out := new(ResponseGetList)
	err := grpc.Invoke(ctx, "/user.UserService/GetList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AddToList(ctx context.Context, in *RequestModifyList, opts ...grpc.CallOption) (*ResponseGeneral, error) {
	out := new(ResponseGeneral)
	err := grpc.Invoke(ctx, "/user.UserService/AddToList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RemoveToList(ctx context.Context, in *RequestModifyList, opts ...grpc.CallOption) (*ResponseGeneral, error) {
	out := new(ResponseGeneral)
	err := grpc.Invoke(ctx, "/user.UserService/RemoveToList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	GetOne(context.Context, *RequestGetOne) (*ResponseGetOne, error)
	GetDetail(context.Context, *RequestGetDetail) (*ResponseGetDetail, error)
	SetDetail(context.Context, *RequestModifyDetail) (*ResponseGeneral, error)
	DeleteDetail(context.Context, *RequestModifyDetail) (*ResponseGeneral, error)
	GetListOne(context.Context, *RequestGetListOne) (*ResponseGetListOne, error)
	GetList(context.Context, *RequestGetList) (*ResponseGetList, error)
	AddToList(context.Context, *RequestModifyList) (*ResponseGeneral, error)
	RemoveToList(context.Context, *RequestModifyList) (*ResponseGeneral, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetOne)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/GetOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetOne(ctx, req.(*RequestGetOne))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/GetDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetDetail(ctx, req.(*RequestGetDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SetDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModifyDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SetDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/SetDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SetDetail(ctx, req.(*RequestModifyDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModifyDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/DeleteDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteDetail(ctx, req.(*RequestModifyDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetListOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetListOne)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetListOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/GetListOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetListOne(ctx, req.(*RequestGetListOne))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetList(ctx, req.(*RequestGetList))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AddToList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModifyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AddToList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/AddToList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AddToList(ctx, req.(*RequestModifyList))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RemoveToList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModifyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RemoveToList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/RemoveToList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RemoveToList(ctx, req.(*RequestModifyList))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOne",
			Handler:    _UserService_GetOne_Handler,
		},
		{
			MethodName: "GetDetail",
			Handler:    _UserService_GetDetail_Handler,
		},
		{
			MethodName: "SetDetail",
			Handler:    _UserService_SetDetail_Handler,
		},
		{
			MethodName: "DeleteDetail",
			Handler:    _UserService_DeleteDetail_Handler,
		},
		{
			MethodName: "GetListOne",
			Handler:    _UserService_GetListOne_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _UserService_GetList_Handler,
		},
		{
			MethodName: "AddToList",
			Handler:    _UserService_AddToList_Handler,
		},
		{
			MethodName: "RemoveToList",
			Handler:    _UserService_RemoveToList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("protos/user/user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 956 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x6e, 0x22, 0x47,
	0x17, 0x75, 0x83, 0xc1, 0xf4, 0xe5, 0xaf, 0x5d, 0x78, 0x00, 0x33, 0xd6, 0x8c, 0xbf, 0xfe, 0x66,
	0x61, 0x91, 0x0c, 0x28, 0x78, 0x13, 0x79, 0x11, 0x89, 0x19, 0xda, 0x23, 0xc4, 0x98, 0x56, 0x1a,
	0x8c, 0x63, 0x69, 0x22, 0x82, 0x5d, 0x17, 0xa7, 0x35, 0xb8, 0x9b, 0x54, 0x37, 0x96, 0xd8, 0xe6,
	0x15, 0xb2, 0xcc, 0x2e, 0xbb, 0x48, 0x79, 0x80, 0x24, 0xab, 0x2c, 0x67, 0x91, 0x48, 0xf9, 0x79,
	0x85, 0x2c, 0xf2, 0x0e, 0xd9, 0x44, 0x55, 0x5d, 0xe6, 0x9f, 0x58, 0x42, 0xd9, 0xb4, 0x5d, 0xa7,
	0xaa, 0xce, 0xb9, 0xf7, 0xdc, 0x5b, 0x55, 0x40, 0x76, 0xc8, 0x5c, 0xdf, 0xf5, 0xca, 0x23, 0x0f,
	0x99, 0xf8, 0x94, 0x04, 0x40, 0xb6, 0xf9, 0xff, 0x85, 0x83, 0x1b, 0xd7, 0xbd, 0x19, 0x60, 0xb9,
	0x37, 0xb4, 0xcb, 0x3d, 0xc7, 0x71, 0xfd, 0x9e, 0x6f, 0xbb, 0x8e, 0x17, 0xac, 0xd1, 0xdf, 0xc0,
	0xae, 0x85, 0x5f, 0x8c, 0xd0, 0xf3, 0x5f, 0xa1, 0xff, 0xda, 0xf6, 0x7c, 0xd3, 0x41, 0xb2, 0x0b,
	0x2a, 0x0b, 0xc0, 0x7a, 0x2d, 0xaf, 0x1c, 0x2a, 0x47, 0x2a, 0x79, 0x06, 0xb1, 0x81, 0xed, 0xf9,
	0xfe, 0x78, 0x88, 0xf9, 0xd0, 0xa1, 0x72, 0x94, 0xaa, 0x90, 0x92, 0x90, 0x3a, 0xf7, 0x90, 0xf1,
	0x7d, 0xed, 0xf1, 0x10, 0x49, 0x0a, 0xa2, 0xb7, 0x78, 0x7b, 0x85, 0x2c, 0x1f, 0xe6, 0xbb, 0xf4,
	0x4b, 0x20, 0x16, 0x7a, 0x43, 0xd7, 0xf1, 0x70, 0x86, 0xfe, 0x09, 0x44, 0x90, 0x31, 0x97, 0x09,
	0xea, 0x54, 0x25, 0x1d, 0x10, 0x19, 0x1c, 0x7a, 0xe9, 0x52, 0x24, 0x19, 0x88, 0x53, 0xf4, 0xae,
	0x99, 0x3d, 0xe4, 0x91, 0x0a, 0x39, 0x95, 0x53, 0x33, 0xf4, 0x46, 0x03, 0x5f, 0x52, 0xff, 0xa4,
	0x4c, 0x22, 0x3f, 0x73, 0xa9, 0xdd, 0x1f, 0x73, 0xf6, 0xcd, 0x23, 0xff, 0x08, 0x12, 0x41, 0xe4,
	0x5d, 0xef, 0xda, 0x65, 0x98, 0x0f, 0x1f, 0x86, 0x8f, 0xe2, 0x95, 0xa3, 0x60, 0xe5, 0x92, 0x4e,
	0xe9, 0x4c, 0xac, 0x6d, 0xf1, 0xa5, 0x86, 0xe3, 0xb3, 0x71, 0xa1, 0x02, 0xda, 0x22, 0x46, 0xe2,
	0x10, 0x7e, 0x8b, 0x63, 0x19, 0x46, 0x12, 0x22, 0x77, 0xbd, 0xc1, 0x28, 0x88, 0x41, 0x3d, 0x09,
	0x7d, 0xa8, 0xe8, 0x75, 0x48, 0xcd, 0x7b, 0xbf, 0x71, 0xf8, 0xfa, 0x37, 0x0a, 0xa4, 0x17, 0x9c,
	0xde, 0xcc, 0xe6, 0xe7, 0xb0, 0xcd, 0xe5, 0x64, 0xfe, 0x4f, 0xef, 0xf3, 0x9f, 0x63, 0x2e, 0xf1,
	0x4f, 0x90, 0xf6, 0x7b, 0xa0, 0x4e, 0x06, 0x0f, 0xe6, 0xfb, 0xad, 0x02, 0x99, 0x39, 0x2b, 0x6b,
	0xe8, 0xf7, 0xec, 0xc1, 0xaa, 0xac, 0x0f, 0x60, 0xfb, 0xad, 0xed, 0x50, 0x99, 0x71, 0x6a, 0x9a,
	0x71, 0xc3, 0x76, 0x28, 0x39, 0x86, 0x48, 0xdf, 0xc6, 0x01, 0x95, 0x51, 0x3e, 0x5b, 0x51, 0xa5,
	0x80, 0xba, 0x74, 0xca, 0x97, 0x05, 0xa1, 0xbe, 0x0f, 0x30, 0x1d, 0x3d, 0x18, 0xeb, 0xe9, 0xac,
	0x9f, 0x0e, 0xb2, 0xde, 0x60, 0x23, 0x3f, 0xf5, 0x97, 0xa0, 0x4d, 0x6b, 0xbc, 0x61, 0xbe, 0xba,
	0x09, 0xc9, 0x29, 0xc9, 0x9a, 0x03, 0xfa, 0xef, 0x8e, 0x25, 0xa7, 0x8e, 0xf1, 0xa8, 0xce, 0x79,
	0xe7, 0x4d, 0x6a, 0xfa, 0x9f, 0x9d, 0xc9, 0xef, 0xc4, 0x99, 0x9c, 0xf0, 0xca, 0x74, 0x37, 0xa2,
	0x3e, 0x86, 0x28, 0x15, 0xdb, 0x65, 0x8d, 0xff, 0xbf, 0xd4, 0x89, 0xb2, 0xc2, 0xc1, 0x9f, 0xa0,
	0xc4, 0xcf, 0x21, 0x3e, 0x33, 0x7c, 0xa8, 0xc6, 0x45, 0x03, 0x62, 0x13, 0x83, 0xe0, 0x5e, 0x4f,
	0xdb, 0x22, 0x69, 0x88, 0xf7, 0xaf, 0x6c, 0xda, 0xe5, 0x8a, 0x36, 0xd5, 0x14, 0x92, 0x04, 0xb5,
	0x7f, 0xd5, 0xed, 0x33, 0x1b, 0x1d, 0xaa, 0x85, 0xe4, 0x50, 0xce, 0x86, 0x8b, 0x5f, 0x2b, 0x90,
	0x98, 0xbb, 0x4b, 0x32, 0x90, 0xe6, 0x67, 0xa8, 0x63, 0x53, 0x74, 0xcd, 0x3e, 0x9f, 0xd2, 0xb6,
	0xc8, 0x3e, 0x3c, 0x9a, 0x80, 0xad, 0xcf, 0x7b, 0x0c, 0xa9, 0x9c, 0x52, 0xc8, 0x63, 0xc8, 0xf1,
	0xa9, 0xea, 0x88, 0xda, 0x6e, 0xdd, 0xf1, 0x91, 0xa1, 0xe7, 0xcb, 0xc9, 0x10, 0xc9, 0x02, 0xe1,
	0x93, 0xa7, 0x2f, 0x4e, 0x85, 0xbc, 0xc4, 0xc3, 0x84, 0x40, 0x4a, 0xe0, 0x3d, 0xc7, 0x93, 0xd8,
	0xf6, 0x3d, 0x56, 0xa7, 0xee, 0x40, 0x62, 0x91, 0xe2, 0x3b, 0x05, 0xd4, 0xa9, 0xd7, 0x00, 0xd1,
	0xa6, 0xd9, 0xee, 0x9a, 0x0d, 0x6d, 0x8b, 0xec, 0x40, 0xc8, 0x6c, 0x68, 0xef, 0x14, 0xb2, 0x07,
	0x69, 0xcb, 0xf8, 0xf8, 0xdc, 0x68, 0xb5, 0xbb, 0xf5, 0x66, 0xa7, 0xfa, 0xba, 0x5e, 0xd3, 0xfe,
	0xda, 0x21, 0x04, 0x92, 0x9d, 0x7a, 0xcd, 0x30, 0xeb, 0xb5, 0xee, 0x85, 0x65, 0x36, 0x5f, 0x69,
	0x3f, 0xc7, 0xf8, 0x4a, 0x81, 0x75, 0x39, 0x89, 0xf1, 0x49, 0xbd, 0xd5, 0xd6, 0x7e, 0x89, 0x91,
	0x24, 0xc4, 0x6a, 0x2f, 0xba, 0x86, 0x65, 0x99, 0x96, 0xf6, 0x6b, 0x9a, 0xa4, 0x01, 0x6a, 0xd5,
	0x76, 0x55, 0x02, 0xbf, 0xa5, 0xc9, 0x2e, 0x24, 0x5a, 0x86, 0xd5, 0x31, 0x2c, 0x09, 0xfd, 0x9e,
	0x26, 0x09, 0xd8, 0x39, 0x6f, 0x36, 0x9a, 0xe6, 0x45, 0x53, 0xfb, 0x3e, 0xc7, 0xa5, 0x9a, 0x46,
	0xfb, 0xc2, 0xb4, 0x1a, 0x72, 0xc5, 0x0f, 0x39, 0xb1, 0xe9, 0xb2, 0xd5, 0x36, 0xce, 0x24, 0xf4,
	0x63, 0xae, 0xf2, 0x77, 0x04, 0xe2, 0x3c, 0xab, 0x16, 0xb2, 0x3b, 0xfb, 0x1a, 0x49, 0x07, 0xa2,
	0xb2, 0x7b, 0x33, 0x73, 0x37, 0x40, 0x00, 0x16, 0xf6, 0x96, 0x5a, 0xc6, 0x74, 0x50, 0xff, 0xdf,
	0x97, 0x7f, 0xfc, 0xf9, 0x55, 0xe8, 0xb1, 0x9e, 0x2d, 0xdf, 0x7d, 0x10, 0xbc, 0x98, 0x41, 0xdd,
	0xcb, 0x37, 0xe8, 0xbb, 0x0e, 0x9e, 0x28, 0x45, 0xf2, 0x06, 0xd4, 0x69, 0xf7, 0x66, 0x17, 0xa9,
	0x03, 0xbc, 0x90, 0x5b, 0xd3, 0x90, 0xfa, 0x13, 0x21, 0x90, 0xd7, 0x33, 0x2b, 0x04, 0x38, 0xfb,
	0xa7, 0xa0, 0xb6, 0x26, 0xec, 0xfb, 0x6b, 0xaf, 0xae, 0xc2, 0xa3, 0x45, 0x01, 0x71, 0x0b, 0xad,
	0xa7, 0xf7, 0x02, 0xfa, 0x6b, 0x48, 0xd4, 0x70, 0x80, 0x3e, 0x6e, 0xac, 0xb0, 0xd6, 0x21, 0x2a,
	0x78, 0xb9, 0xc8, 0x67, 0x00, 0x33, 0xef, 0x79, 0x6e, 0xd1, 0x22, 0x39, 0x51, 0xc8, 0xaf, 0x7c,
	0x3e, 0x78, 0x15, 0x9e, 0x0a, 0x8d, 0x7d, 0x7d, 0x6f, 0xa2, 0xc1, 0x1b, 0x77, 0xa6, 0x06, 0x6d,
	0xd8, 0xb9, 0x7f, 0xc7, 0xf6, 0x56, 0xd1, 0x2f, 0x07, 0x2f, 0x60, 0xfd, 0x40, 0x10, 0x67, 0xf5,
	0xdd, 0x25, 0x62, 0xce, 0x7a, 0x09, 0x6a, 0x95, 0xd2, 0xb6, 0x2b, 0x78, 0x73, 0x6b, 0x1e, 0xf7,
	0x75, 0xbe, 0xac, 0xa1, 0xee, 0x51, 0xca, 0xa9, 0xbb, 0x90, 0xb0, 0xf0, 0xd6, 0xbd, 0xc3, 0x0d,
	0xd9, 0xd7, 0x38, 0xc2, 0x04, 0xe7, 0x89, 0x52, 0xbc, 0x8a, 0x8a, 0x1f, 0x6c, 0xc7, 0xff, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x3d, 0x93, 0x6f, 0xee, 0xee, 0x09, 0x00, 0x00,
}
