syntax = "proto3";

package user;

import "google/api/annotations.proto";

service UserService {
  // User detail, fbAppID-UserID, list userID co facebook, list cac friend cua user
  
  rpc GetOne(RequestGetOne) returns (ResponseGetOne){
	option (google.api.http) = {
       post: "/v1/user/detail/getone"
	   body: "*"
    };
  }

  rpc GetDetail(RequestGetDetail) returns (ResponseGetDetail){
	option (google.api.http) = {
       post: "/v1/user/detail/get"
	   body: "*"
    };
  }
  rpc SetDetail(RequestModifyDetail) returns (ResponseGeneral){
	option (google.api.http) = {
       post: "/v1/user/detail/set"
	   body: "*"
    };
  }
 rpc DeleteDetail(RequestModifyDetail) returns (ResponseGeneral){
	option (google.api.http) = {
       post: "/v1/user/detail/delete"
	   body: "*"
    };
  }

 // list video cua user, video shared boi user, audioID duoc user quan tam, list FB friend cua user, 
// fans cua user, idol cua user

   rpc GetListOne(RequestGetListOne) returns (ResponseGetListOne){
	option (google.api.http) = {
       post: "/v1/user/list/getone"
	   body: "*"
    };
  }

  rpc GetList(RequestGetList) returns (ResponseGetList){
	option (google.api.http) = {
       post: "/v1/user/list/get"
	   body: "*"
    };
  }

  rpc AddToList(RequestModifyList) returns (ResponseGeneral){
	option (google.api.http) = {
       post: "/v1/user/list/add"
	   body: "*"
    };
  }

 rpc RemoveToList(RequestModifyList) returns (ResponseGeneral){
	option (google.api.http) = {
       post: "/v1/user/list/remove"
	   body: "*"
    };
  }
}

// message for list Audio top suggestion, top editor, categories, audio by topic

message RequestGetListOne {
	string requestID = 1;
	UserListType listtype = 2;
	string member = 3;
}

message ResponseGetListOne {
	ErrorCode error = 1;
	string description  = 2;
	string result = 3;
}

message RequestModifyList {
	string requestID = 1;
	UserListType listtype = 2;
	map<string, string> member_score = 3;
}

message RequestGetList {
	string requestID = 1;
	UserListType listtype = 2;
}

message ResponseGetList {
	ErrorCode error = 1;
	string description  = 2;
	map<string, string> list = 3;
}

// message for Audio, Topic, Categories, Event Detail

message RequestModifyDetail {
	string requestID = 1;
	UserKind kind = 2;
	map<string, string> field = 3;
}

message ResponseGeneral {
	ErrorCode error = 1;
	string description  = 2;
}

message RequestGetDetail {
	string requestID = 1;
	UserKind kind = 2;
}

message RequestGetOne {
	string requestID = 1;
	UserKind kind = 2;
	string field = 3;
}

message ResponseGetOne {
	ErrorCode error = 1;
	string description  = 2;
	string result = 3;
}

message ResponseGetDetail {
	ErrorCode error = 1;
	string description  = 2;
	map<string, string> detail = 3;
}

enum UserKind {
	detail = 0;
	fbid_userid = 1;
	fb_friend = 2;
	fb_userid = 3;
}

enum UserListType {
	listVideoOfUser = 0;
	listVideoSharedOfUser = 1;
	listAudioInterestOfUser = 2;
	listFBFriendOfUser = 3;
	listFansOfUser = 4;
	listIdolOfUser = 5;
	
}
enum ErrorCode
{
	NOT_OK = 0;
	OK = 200;

	// client
	REQUEST_INVALID = 1000;
	
	//server response
	VIDEOID_WRONG = 1100;
	VIDEO_NOT_EXIST = 1101;
	
    // server - Generic error for client
    DB_ERROR = 2000;
    DATA_ERROR = 2001;
    SERVER_ERROR = 2002;

    // general - unknown
    UNKNOWN = 3000;
    NETWORK_ERROR = 3001;
    SYSTEM_ERROR = 3002;
}